# Generated by Django 3.1.6 on 2021-03-17 15:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=16, verbose_name='№/метка')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='cabinet_photo', verbose_name='Фотография кабинета')),
                ('coordinates', models.URLField(blank=True, null=True, verbose_name='Ссылка на координаты')),
            ],
            options={
                'verbose_name': 'Кабинет',
                'verbose_name_plural': 'Кабинеты',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.SmallIntegerField(default=1, verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Состав',
                'verbose_name_plural': 'Составы',
                'ordering': ['thing'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='location_photo', verbose_name='Фотография местоположения')),
                ('cabinet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loc', to='storage.cabinet', verbose_name='Кабинет')),
            ],
            options={
                'verbose_name': 'Местоположение',
                'verbose_name_plural': 'Местоположения',
                'ordering': ['cabinet', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Статус')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='status_picture', verbose_name='Картинка')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='StatusThing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.SmallIntegerField(default=1, verbose_name='Количество')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('update', models.DateField(default=datetime.date.today, verbose_name='Дата обновления статуса')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_thing', to='storage.status', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Присвоение статусов',
                'verbose_name_plural': 'Присвоение статусов',
            },
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('name_docs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование по документам')),
                ('inventory', models.CharField(blank=True, max_length=255, null=True, verbose_name='Инвентарные номера')),
                ('manufacturer', models.CharField(max_length=255, null=True, verbose_name='Производитель')),
                ('site', models.URLField(blank=True, null=True, verbose_name='Ссылка на web-страницу')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена (руб)')),
                ('count', models.SmallIntegerField(default=True, verbose_name='Общее кол-во')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='thing_picture', verbose_name='Изображение')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='thing_photo', verbose_name='Фотография')),
                ('is_accounting', models.BooleanField(default=False, verbose_name='Бухгалтерский учёт')),
                ('is_material', models.BooleanField(default=False, verbose_name='Расходный материал')),
                ('is_set', models.BooleanField(default=False, verbose_name='Набор')),
                ('composition', models.ManyToManyField(through='storage.Composition', to='storage.Thing', verbose_name='Элементы')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UseThing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.SmallIntegerField(default=1, verbose_name='Количество')),
                ('justification', models.TextField(blank=True, null=True, verbose_name='Обоснование')),
                ('created', models.DateField(default=datetime.date.today)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='use', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('location', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='use', to='storage.location', verbose_name='Местоположение')),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='use', to='storage.thing', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Использование предметов',
                'verbose_name_plural': 'Использование предметов',
            },
        ),
        migrations.AddField(
            model_name='thing',
            name='employees',
            field=models.ManyToManyField(through='storage.UseThing', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники'),
        ),
        migrations.AddField(
            model_name='thing',
            name='location',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thing', to='storage.location', verbose_name='Местоположение'),
        ),
        migrations.AddField(
            model_name='thing',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thing_person', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный сотрудник'),
        ),
        migrations.AddField(
            model_name='thing',
            name='statuses',
            field=models.ManyToManyField(through='storage.StatusThing', to='storage.Status', verbose_name='Статусы'),
        ),
        migrations.AddField(
            model_name='statusthing',
            name='thing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_thing', to='storage.thing', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='composition',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eq_equip', to='storage.thing', verbose_name='Элемент'),
        ),
        migrations.AddField(
            model_name='composition',
            name='thing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eq_thing', to='storage.thing', verbose_name='Предмет'),
        ),
    ]
